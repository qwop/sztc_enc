name: Java项目CI

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master         # Push events on master branch
      - 'releases/*'   # Push events to branches matching refs/heads/releases/*
      - 'refs/tags/*'  # Push events to branches matching refs/heads/tags/*
      - '!refs/pull/*' # Push events on branches that do not match refs/pull/*
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    # Use this yaml in your workflow file for each job
    #runs-on: self-hosted
    steps:
    - name: 拉取最新代码
      uses: actions/checkout@v1
    - name: 设置JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: maven依赖缓存        
      uses: actions/cache@v1.0.3
      with:
       path: ./repo
       key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
       restore-keys: |
        ${{ runner.os }}-maven-
    - name: maven进行打包  
	  if: github.event_name == 'push' && github.ref == 'refs/heads/master'  # && matrix.java_version == '1.8'
	  env:
        GPG_KEY: ${{ secrets.GPG_KEY }}
        GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
	  run: |
        export GPG_TTY=$(tty)
        export DISPLAY=:0
        gpg --version
        echo "$GPG_KEY" | base64 --decode --ignore-garbage | gpg --batch --fast-import -
        echo "test" | gpg --batch --clearsign --pinentry-mode loopback || true
        mvn --settings sonatype-settings.xml -DskipTests -Prelease deploy --batch-mode -Dsytle.colors=always --errors
        rm -rf ~/.gnupg
    - name: Release
      uses: docker://softprops/action-gh-release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && matrix.java_version == '1.8'
      with:
        # body_path: ${{ github.workflow }}-CHANGELOG.txt
        files: './target/sctc_enc-*.jar,./target/sctc_enc-*.jar.asc'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}